# Copyright (c) Contributors to the Open 3D Engine Project.
# For complete copyright and license terms please see the LICENSE at the root of this distribution.
#
# SPDX-License-Identifier: Apache-2.0 OR MIT
#

ARG ROS_VERSION=humble
ARG UBUNTU_VERSION=jammy

FROM ros:${ROS_VERSION}-ros-base-${UBUNTU_VERSION}

ENV WORKSPACE=/data/workspace

WORKDIR $WORKSPACE

# ROSConDemo Arguments
ARG ROSCON_DEMO_REPO=https://github.com/RobotecAI/ROSCon2023Demo.git
ARG ROSCON_DEMO_BRANCH=development
ARG ROSCON_DEMO_COMMIT=HEAD
ARG ROCSON_DEMO_LEVEL=level1

# ROSConDemo Environment Variables
ENV ROSCON_DEMO_REPO=$ROSCON_DEMO_REPO
ENV ROSCON_DEMO_BRANCH=$ROSCON_DEMO_BRANCH
ENV ROSCON_DEMO_COMMIT=$ROSCON_DEMO_COMMIT

ENV ROSCON_DEMO_ROOT=$WORKSPACE/ROSCon2023Demo
ENV ROSCON_DEMO_PROJECT=$ROSCON_DEMO_ROOT/Project
ENV ROSCON_DEMO_NAV_ROOT=$WORKSPACE/ros2_nav

ENV LANG=en_US.UTF-8

# Setup time zone and locale data (necessary for SSL and HTTPS packages)
RUN apt-get update \
    && DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata locales keyboard-configuration curl \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG=en_US.UTF-8 \
    && sh -c 'echo "deb [arch=amd64,arm64] http://repo.ros2.org/ubuntu/main `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list' \
    && curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - \
    && rm -rf /var/lib/apt/lists/*

# Install the required ubuntu packages
RUN apt-get update \
    && apt-get install -y \
            python3-pip \
            software-properties-common \
            ros-${ROS_DISTRO}-ackermann-msgs \
            ros-${ROS_DISTRO}-control-toolbox \
            ros-${ROS_DISTRO}-nav-msgs \
            ros-${ROS_DISTRO}-gazebo-msgs \
            ros-${ROS_DISTRO}-xacro \
            ros-${ROS_DISTRO}-vision-msgs \
            ros-${ROS_DISTRO}-nav2-msgs \
            ros-${ROS_DISTRO}-ur-msgs \
            ros-${ROS_DISTRO}-moveit-servo \
            ros-${ROS_DISTRO}-moveit-visual-tools \
            ros-${ROS_DISTRO}-moveit \
            ros-${ROS_DISTRO}-pilz-industrial-motion-planner \
            ros-${ROS_DISTRO}-cyclonedds \
            ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
            ros-${ROS_DISTRO}-controller-manager \
            ros-${ROS_DISTRO}-ur-client-library \
            ros-${ROS_DISTRO}-nav2-common \
            ros-${ROS_DISTRO}-navigation2 \
            ros-${ROS_DISTRO}-ur-description \
            ros-${ROS_DISTRO}-force-torque-sensor-broadcaster \
            python3-vcstool \
            python3-rosdep2 \
            python3-colcon-common-extensions \
    && pip install python-statemachine

ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

COPY build_ros.sh $WORKSPACE/
COPY launch_ros.sh $WORKSPACE/

RUN cd $WORKSPACE \
    && ./build_ros.sh

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES all
ENTRYPOINT ["/bin/bash", "-c"]
